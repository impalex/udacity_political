apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlinx-serialization'
apply plugin: 'kotlin-parcelize'
apply plugin: 'androidx.navigation.safeargs'

def GOOGLE_API_KEY = "PUT_YOUR_API_KEY_HERE"

def apiPropertiesFile = rootProject.file("api.properties")
if (apiPropertiesFile.exists()) {
    def apiProperties = new Properties()
    apiProperties.load(new FileInputStream(apiPropertiesFile))
    if (apiProperties.containsKey("googleApi")) {
        GOOGLE_API_KEY = apiProperties["googleApi"]
    }
}

if (GOOGLE_API_KEY=="PUT_YOUR_API_KEY_HERE") {
    throw new GradleException("Please replace GOOGLE_API_KEY with your API key!")
}

android {
    compileSdkVersion 30
    buildFeatures {
        dataBinding true
    }
    defaultConfig {
        applicationId 'com.example.android.politicalpreparedness'
        minSdkVersion 26
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        buildConfigField "String", "GOOGLE_API_KEY", "\"${GOOGLE_API_KEY}\""
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$version_kotlin"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$version_kotlin_coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$version_kotlin_coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$version_kotlin_serialization"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$version_kotlin"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.3.6'

    // Constraint Layout
    implementation "androidx.constraintlayout:constraintlayout:$version_constraint_layout"

    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.3.1"
    implementation "androidx.lifecycle:lifecycle-extensions:$version_lifecycle_extensions"

    // Fragments
    implementation "androidx.fragment:fragment-ktx:$version_fragments"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$version_navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$version_navigation"

    // Core with Ktx
    implementation "androidx.core:core-ktx:$version_core"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit: $version_retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$version_retrofit"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$version_retrofit_coroutines_adapter"

    // Moshi
    implementation "com.squareup.moshi:moshi:$version_moshi"
    implementation "com.squareup.moshi:moshi-kotlin:$version_moshi"
    implementation "com.squareup.moshi:moshi-adapters:$version_moshi"

    // Glide
    implementation "com.github.bumptech.glide:glide:$version_glide"

    //Room
    implementation "androidx.room:room-runtime:$version_room"
    implementation "androidx.room:room-ktx:$version_room"
    kapt "androidx.room:room-compiler:$version_room"

    // Location
    implementation "com.google.android.gms:play-services-location:$version_play_services_location"
}
